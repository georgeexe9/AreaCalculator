<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>